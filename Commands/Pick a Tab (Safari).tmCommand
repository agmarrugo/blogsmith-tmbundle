<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -rjcode -Ku
SUPPORT = ENV['TM_SUPPORT_PATH']
DIALOG = ENV['DIALOG']
require SUPPORT + '/lib/ui'
require SUPPORT + '/lib/escape'
require SUPPORT + '/lib/osx/plist'
require SUPPORT + '/lib/exit_codes'
require 'erb'

input = STDIN.read

urlcount = %x{osascript -e 'tell application \"Safari\"' -e 'set tabCount to count of every tab of window 1' -e 'return tabCount' -e 'end tell' 2&gt;/dev/null}
counter = 1
tabs = []
while counter &lt;= urlcount.to_i
	tabUrl = %x{osascript -e 'tell application \"Safari\"' -e 'return URL of item #{counter.to_s} of every tab of window 1' -e 'end tell' 2&gt;/dev/null}
tabTitle = %x{osascript -e 'tell application \"Safari\"' -e 'return name of item #{counter.to_s} of every tab of window 1' -e 'end tell' 2&gt;/dev/null}
	tabs &lt;&lt; { 
          'title' =&gt; tabTitle.chomp,
          'url' =&gt; tabUrl.chomp}
	counter += 1
end
    plist = { 'menuItems' =&gt; tabs }.to_plist
    
    res = OSX::PropertyList.load(`#{e_sh DIALOG} -up #{e_sh plist}`)
    TextMate.exit_discard unless res.has_key? 'selectedMenuItem'

    url = res['selectedMenuItem']['url']
    title = res['selectedMenuItem']['title']

if input.empty? &amp;&amp; !(ENV['TM_SCOPE'].scan(/markdown/).empty?) &amp;&amp; ENV['TM_CURRENT_LINE'] =~ /^(\s+)?$/
	print ERB.new(ENV['TM_REF_LINK_FORMAT']).result
	# print "[$1]: #{url} \"#{title}\""
else
    print ERB.new(ENV['TM_BLINK_FORMAT']).result
end</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^@w</string>
	<key>name</key>
	<string>Pick a Tab (Safari)</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.html, text.html.markdown, text.html.markdown.multimarkdown, text.html.textile, text.bbcode, text.moinmoin, text.restructuredtext</string>
	<key>tabTrigger</key>
	<string>tab</string>
	<key>uuid</key>
	<string>F7332367-4230-444D-AE21-5BAD1E5F6A2E</string>
</dict>
</plist>
