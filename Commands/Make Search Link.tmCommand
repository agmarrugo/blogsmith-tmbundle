<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -rjcode -Ku
SUPPORT = ENV['TM_SUPPORT_PATH']
DIALOG = ENV['DIALOG']
require SUPPORT + '/lib/ui'
require SUPPORT + '/lib/escape'
require SUPPORT + '/lib/osx/plist'
require SUPPORT + '/lib/exit_codes'
require 'net/http'
require 'rexml/document'
require 'erb'
require 'cgi'

input = STDIN.read

blogsite = ENV['BLOG_SITE'] ? ENV['BLOG_SITE'] : "www.tuaw.com"
blogsite = "www." + blogsite unless blogsite =~ /^www\./
searchstring = input.empty? ? "Search terms" : input
res = TextMate::UI.request_string(:title =&gt; "TUAW Search Query",:prompt =&gt; "Enter terms to create a search link",:default =&gt; searchstring)
TextMate.exit_discard unless res
url = "http://#{blogsite}/search/?q=#{CGI::escape(res)}"
data = Net::HTTP.get_response(URI.parse(url)).body
TextMate.exit_show_tool_tip "No results returned for search" if data =~ /no results found/
titles = data.scan(/id\="pt\d+"&gt;([^&lt;]+)&lt;/)
matches = titles.length
# matches = data.scan(/class\="post"/).length
title = ""
if matches &gt; 2
  matches = "#{matches}+" if matches == 15  
  output = "#{matches} matches, including:\n"
  titles.each do |title|
    output += title[0] + "\n"
  end
  TextMate::UI.tool_tip(output)
  TextMate.exit_replace_text url if ENV['TM_CURRENT_LINE'] =~ /^link: #{input}/
  if (input.empty? &amp;&amp; !(ENV['TM_SCOPE'].scan(/markdown/).empty?) &amp;&amp; ENV['TM_CURRENT_LINE'] =~ /^(\s+)?$/) || ENV['TM_CURRENT_LINE'] =~ /^(#{input})?(\s+)?$/
    input = "search" + res.chomp.gsub(/\s+/,"_")
    print ERB.new(ENV['TM_REF_LINK_FORMAT']).result
  else
    input = searchstring if input.empty?
    print ERB.new(ENV['TM_BLINK_FORMAT']).result
  end
else
  TextMate.exit_show_tool_tip "Less than 3 links found for #{searchstring}, try another search phrase"
end</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^@w</string>
	<key>name</key>
	<string>Make Search Link</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.html, text.html.markdown, text.html.markdown.multimarkdown, text.html.textile, text.bbcode, text.moinmoin, text.restructuredtext</string>
	<key>tabTrigger</key>
	<string>?</string>
	<key>uuid</key>
	<string>5C7201E6-9DF2-4E32-8D06-1E707C02D789</string>
</dict>
</plist>
