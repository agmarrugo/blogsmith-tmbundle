<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -rjcode -Ku
SUPPORT = ENV['TM_SUPPORT_PATH']
DIALOG = ENV['DIALOG']
require SUPPORT + '/lib/ui'
require SUPPORT + '/lib/escape'
require SUPPORT + '/lib/osx/plist'
require SUPPORT + '/lib/exit_codes'
require "#{ENV['TM_BUNDLE_SUPPORT']}/lib/yahoo"
require 'erb'
require 'cgi'

input = STDIN.read
blogsite = ENV['BLOG_SITE'] ? ENV['BLOG_SITE'] : "www.tuaw.com"
input.empty? ? searchstring = "Search string" : searchstring = input
res = TextMate::UI.request_string(:title =&gt; "TUAW Search Query",:prompt =&gt; "Enter terms to create a search link",:default =&gt; searchstring)
TextMate.exit_discard unless res
query = e_url(res + " site:#{blogsite}")
yahoo = WebSearch.new('TM_YAHOO', query, 'all', 10, 1, nil, 1)
url_count = yahoo.parse_results.length
title = ""
if url_count.to_i &gt; 3
	url = "http://#{blogsite}/search/?q=#{CGI::escape(res)}"
	if input.empty? &amp;&amp; !(ENV['TM_SCOPE'].scan(/markdown/).empty?) &amp;&amp; ENV['TM_CURRENT_LINE'] =~ /^(\s+)?$/
	input = "search" + res.chomp.gsub(/\s+/,"_")
	print ERB.new(ENV['TM_REF_LINK_FORMAT']).result
else
	input = searchstring if input.empty?
    print ERB.new(ENV['TM_BLINK_FORMAT']).result
end
else
	TextMate.exit_show_tool_tip "Less than 4 links found, try another term"
end</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^@w</string>
	<key>name</key>
	<string>Make Search Link</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.html, text.html.markdown, text.html.markdown.multimarkdown, text.html.textile, text.bbcode, text.moinmoin, text.restructuredtext</string>
	<key>tabTrigger</key>
	<string>?</string>
	<key>uuid</key>
	<string>BE3F9DEA-9900-4B68-B8EB-35DA096199C0</string>
</dict>
</plist>
