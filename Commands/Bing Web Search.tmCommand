<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -rjcode -Ku
SUPPORT = ENV['TM_SUPPORT_PATH']
BSUPPORT = ENV['TM_BUNDLE_SUPPORT']
DIALOG = ENV['DIALOG']
require SUPPORT + '/lib/escape'
require SUPPORT + '/lib/ui'
require SUPPORT + '/lib/osx/plist'
require SUPPORT + '/lib/exit_codes'
require BSUPPORT + '/lib/cooldialog'
require 'erb'
require 'net/http'
require 'rexml/document'
require 'cgi'

string = STDIN.read
offset = 0

if string.empty?
	if ENV['TM_CURRENT_LINE'] =~ /\[([^\]]+)/
		phrase = $1
	else
		phrase = TextMate::UI.request_string(:title =&gt; "Search Query",:prompt =&gt; "Enter terms to search for")
	end
else
	if ENV['TM_CURRENT_LINE'] =~ /^\[([^\]]+)/
		phrase = $1
		phrase = phrase.sub(/dev /,'') + " iphone" if ENV['TM_CURRENT_LINE'] =~ /^\[dev /
	else
		phrase = string
	end
end

def do_search(offset,phrase)
  escapedUrl = "http://api.search.live.net/xml.aspx?Appid=6B9E3A4B9F0D8F963A24815A0317BF1DCA3B0E9A&amp;query=#{e_url(phrase)}&amp;sources=web&amp;web.offset=#{offset}"

  xml_data = Net::HTTP.get_response(URI.parse(escapedUrl)).body
  doc = REXML::Document.new(xml_data)
  bings = []
  doc.elements.each('SearchResponse/web:Web/web:Results/web:WebResult') do |result|
    begin
      bings &lt;&lt; {
        'title' =&gt; result.elements['web:Title'].text.gsub('"','&amp;raquo;').gsub("'",'&amp;rsquo;'),
        'url' =&gt; result.elements['web:Url'].text
      }
    rescue
      TextMate.exit_show_tool_tip "Error in returned data"
    end
  end
  bings &lt;&lt; {
    'title' =&gt; 'More results…',
    'url' =&gt; ''
  } unless bings.empty?

  TextMate.exit_show_tool_tip "No matches" if bings.empty?

  plist = { 'menuItems' =&gt; bings }.to_plist
  res = OSX::PropertyList.load(`#{e_sh DIALOG} -up #{e_sh plist}`)
  unless res.has_key? 'selectedMenuItem'
    TextMate::CoolDialog.cool_tool_tip("Cancelled")
	if ENV['TM_CURRENT_LINE'] =~ /^\[/
	    TextMate.exit_insert_text "]: "
	else
		TextMate.exit_discard
	end
  end
  if res['selectedMenuItem']['title'] == "More results…"
    offset += 10
    do_search(offset,phrase)
  else
    return res
  end
end

res = do_search(offset,phrase)
url = res['selectedMenuItem']['url']
input = phrase # res['selectedMenuItem']['title']

if !(ENV['TM_SCOPE'].scan(/markdown/).empty?) &amp;&amp; ENV['TM_CURRENT_LINE'] =~ /^#{string}(\s+)?$/
  print ERB.new(ENV['TM_REF_LINK_FORMAT']).result
elsif ENV['TM_CURRENT_LINE'] =~ /\[(dev )?#{phrase.sub(/ iphone/,'')}/ || ENV['TM_CURRENT_LINE'] =~ /\[#{string}/
  string = phrase if string.empty?
  print "${1:#{string}}]: #{url}$0"
else
  print ERB.new(ENV['TM_BLINK_FORMAT']).result
end
</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^@w</string>
	<key>name</key>
	<string>Web Search (Bing)</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.html, text.html.markdown, text.html.markdown.multimarkdown</string>
	<key>tabTrigger</key>
	<string>]: </string>
	<key>uuid</key>
	<string>B14B1917-515B-4B02-9F26-55093F7215C1</string>
</dict>
</plist>
