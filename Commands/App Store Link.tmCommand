<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
SUPPORT = ENV['TM_SUPPORT_PATH']
DIALOG = ENV['DIALOG']
require SUPPORT + '/lib/escape'
require SUPPORT + '/lib/osx/plist'
require SUPPORT + '/lib/exit_codes'
require 'erb'
require 'net/http'

phrase = STDIN.read

escapedUrl = "http://beta.appspace.com/apps/find/#{e_url(phrase.strip)}/"

res = Net::HTTP.get_response(URI.parse(escapedUrl)).body
apps = []
res.split("\n").each {|app|
	apps &lt;&lt; {
			'title' =&gt; app,
			'url' =&gt; app
		}
}
TextMate.exit_show_tool_tip "No matches" if apps.empty?
if apps.length == 1
	sel = apps[0]['url']
else
	plist = { 'menuItems' =&gt; apps }.to_plist
	res = OSX::PropertyList.load(`#{e_sh DIALOG} -up #{e_sh plist}`)
	TextMate.exit_show_tool_tip "Cancelled" unless res.has_key? 'selectedMenuItem'
	sel = res['selectedMenuItem']['url']
end
id_url = "http://beta.appspace.com/apps/get-id-from-name/#{e_url(sel)}/"
app_res = Net::HTTP.get_response(URI.parse(id_url)).body
begin
	appspace_id = app_res.match(/"app_id"\: (\d+)/)[1]
rescue
	TextMate.exit_show_tool_tip "Error retrieving ID"
end
view_url = "http://beta.appspace.com/apps/view/#{appspace_id}/"
scrape = Net::HTTP.get_response(URI.parse(view_url)).body
id = scrape.match(/viewSoftware%3Fid%3D(\d+)/)[1]
price = scrape.match(/buy_button"&gt;\$(\d+\.\d\d)/)[1].to_s

url = "http://itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=#{id}&amp;mt=8"
input = "#{sel}"

if !(ENV['TM_SCOPE'].scan(/markdown/).empty?) &amp;&amp; ENV['TM_CURRENT_LINE'] =~ /^(\s+)?$/
	print ERB.new(ENV['TM_REF_LINK_FORMAT']).result
else
	print ERB.new(ENV['TM_BLINK_FORMAT']).result
	print " (iTunes link)"
end

	
</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^@w</string>
	<key>name</key>
	<string>App Store Link</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.html, text.html.markdown, text.html.markdown.multimarkdown</string>
	<key>uuid</key>
	<string>AD95C84B-AAD4-4F3A-B79B-604B08190004</string>
</dict>
</plist>
