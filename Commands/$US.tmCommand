<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
SUPPORT = ENV['TM_SUPPORT_PATH']
BUNDLESUPPORT = ENV['TM_BUNDLE_SUPPORT']
require "#{SUPPORT}/lib/exit_codes.rb"
require 'erb'

input = STDIN.read

def ts( st )
  mynum = st.to_s.reverse.scan(/(?:\d*\.)?\d{1,3}-?/).join(',').reverse
  dec = mynum.split('.')
  mynum = dec[0].to_s + '.' + dec[1].to_s.ljust(2, '0')[0,2] if dec[1]
  mynum
end


if input.match(/^[\%\$\d\*\/\+\-,\. \(\)]+$/)
	num = ts(eval(input.gsub(/[\$\,]/,'')).to_s)
	print ERB.new(ENV['TM_MONEY_FORMAT']).result
else
	if input =~ /\$?[\d\,\.]{2,}/
		matches = input.scan(/(\$)?([\d\,\.]{2,})([A-Z]+)?/m)
		matches.reverse.each {|pre,digits,post|
			unless post == 'US'
				num = ts(digits)
				input = input.sub(/\$?#{digits}#{post}/,ERB.new(ENV['TM_MONEY_FORMAT']).result)
				TextMate.exit_replace_text input
			end
		}
		print input
	else
		TextMate.exit_show_tool_tip "Not numeric"
	end
end</string>
	<key>fallbackInput</key>
	<string>line</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>~$</string>
	<key>name</key>
	<string>$US</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>scope</key>
	<string>text.html.markdown, text.html.markdown.multimarkdown,text.html</string>
	<key>uuid</key>
	<string>F3A789D0-EE7D-4E15-8230-C4101B3B4934</string>
</dict>
</plist>
