<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
DIALOG = ENV['DIALOG']
require "#{ENV['TM_SUPPORT_PATH']}/lib/progress.rb"
require "#{ENV['TM_SUPPORT_PATH']}/lib/exit_codes.rb"
require "#{ENV['TM_SUPPORT_PATH']}/lib/ui.rb"

$blogger_email = ENV['BLOGSMITH_USER']
$blogger_pass = ENV['BLOGSMITH_PASS']
$blogid = ENV['BLOG_ID']

$line = ENV['TM_CURRENT_LINE']

def get_cats
	catfilename = File.exist?(File.expand_path("~/Library/Preferences/com.macromates.textmate.blogsmith.categories.txt")) ? File.expand_path("~/Library/Preferences/com.macromates.textmate.blogsmith.categories.txt") : "#{ENV['TM_BUNDLE_SUPPORT']}/lib/categories.txt"
	catfile = File.new(catfilename,'r')
	catsource = catfile.read.split("&lt;--BEGIN CATEGORY PASTE BELOW THIS LINE--&gt;")[1]
	return catsource
end

# def get_cats()
#   
#     %x{curl -s -d 'email=#{$blogger_email}' -d 'password=#{$blogger_pass}' -d 'rememberme=1' -d 'signin_button=Sign%20In' -L 'http://blogsmith.aol.com/sign-in/' -c $TMPDIR/blogsmithcookie.txt}
# 
# catsource = %x{curl -s 'http://blogsmith.aol.com/?a=ajax-post-get-browse-cats&amp;postblogid=#{$blogid}' --cookie $TMPDIR/blogsmithcookie.txt}
# 	
#     return catsource
# end

def process_source(catsource)
	catsource.gsub!(/^(?:\n+)?getBrowseCatsOK\("(.*)"\)$/m,"\\1")
	catsource.gsub!(/&lt;h4(?:[^&gt;]+)?&gt;([^&gt;]+)&lt;\/h4&gt;/,"****\\1\n")
	catsource = catsource.split("****")
	catsource.shift if catsource[0].empty? || catsource[0] == "\n"
	catlist = []
	catsource.each {|section|
		parent_title = section.match(/^([^\n]+)\n/)[1]
		children = section.scan(/(?:&lt;ul&gt;)?&lt;li&gt;&lt;a id=\\?"(\d+)\\?"[^&gt;]+&gt;([^&lt;]+)&lt;\/a&gt;&lt;\/li&gt;(?:&lt;\/ul&gt;)?/m)
		cats = []
		children.each {|child|
			cats &lt;&lt; { 'id' =&gt; child[0], 'title' =&gt; child[1] }
		}
		catlist &lt;&lt; { 'title' =&gt; parent_title, 'categories' =&gt; cats }
	}
	return catlist
end

$catplist = Array.new

TextMate.call_with_progress(:title =&gt;'Retrieving Categories',
                        :summary =&gt; 'Contacting Blogsmith...',
                        :indeterminate =&gt; true,
                        :cancel =&gt; lambda {TextMate.exit_discard} ) do |dialog|
dialog.parameters = {'summary' =&gt; 'Fetching source','progressValue' =&gt; 25 }
catsource = get_cats()

dialog.parameters = {'summary' =&gt; 'Parsing','progressValue' =&gt; 50 }
catlist = process_source(catsource)
catlist.each {|parent| 
	parent['categories'].each {|cat|
		$catplist &lt;&lt; {'title' =&gt; cat['title'], 'tag' =&gt; cat['id'] }
	}
}
$catplist = $catplist.sort do |a,b|
      a['title'].upcase &lt;=&gt; b['title'].upcase
end

dialog.parameters = {'summary' =&gt; 'Complete!','progressValue' =&gt; 100 }
end
plist = { 'tags' =&gt; $catplist }.to_plist
res = OSX::PropertyList::load(`#{e_sh DIALOG} -mp #{e_sh plist} select_tags2b`)
TextMate.exit_insert_text "categories: " if res['returnButton'] == "Cancel"
# TextMate.exit_show_tool_tip "nothing returned" unless res.has_key? 'selectedMenuItem'
returnedcats = res['result']['returnArgument']
catlist = ''
unless $line.empty?
	existing_cats = $line.split(';')
	returnedcats.delete_if {|cat| existing_cats.include? cat}
end
returnedcats.map {|cat|
	catlist += ";" unless catlist == ''
	catlist += cat
}
b = $line =~ /^[Cc]ategories\:(.*)?/ ? 'at' : "categories: "
o = "#{catlist.chomp}"
o += ";" unless $line.empty? || o == ''
print "#{b}$0${1:#{o}}"</string>
	<key>input</key>
	<string>document</string>
	<key>name</key>
	<string>Choose Categories</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.html.markdown, text.html.markdown.multimarkdown</string>
	<key>tabTrigger</key>
	<string>categories: </string>
	<key>uuid</key>
	<string>2363D04C-450A-4EB1-9C7B-546932116815</string>
</dict>
</plist>
