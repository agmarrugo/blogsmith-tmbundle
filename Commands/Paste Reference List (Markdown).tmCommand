<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
SUPPORT = ENV['TM_SUPPORT_PATH']
require SUPPORT + '/lib/exit_codes'

clipboard = %x{__CF_USER_TEXT_ENCODING=$UID:0x8000100:0x8000100 pbpaste}.strip
input = STDIN.read

if input.empty? 
	links = clipboard.scan /(https?:\/\/[^ \n"]+)/m
else
	links = input.scan /(https?:\/\/[^ \n"]+)/m
end
if links.empty? then
	TextMate.exit_show_tool_tip "No links found"
else
norepeat = []
output = []
links.each {|url| 
	domain = url[0].match(/https?:\/\/([^\/]+)/)
	parts = domain[1].split('.')
	name = case parts.length
		when 1: parts[0]
		when 2: parts[0]
		else parts[1]
	end
	while norepeat.include? name
		if name =~ / [0-9]$/
			name.next!
		else 
			name = name + " 2"
		end
	end
	output &lt;&lt; {'title' =&gt; name, 'link' =&gt; url }
	norepeat.push name
}
output = output.sort {|a,b| a['title'] &lt;=&gt; b['title']}
counter = 0
output.each { |x| 
	counter += 1
	puts "[${#{counter}:#{x['title']}}]: #{x['link']}" 
}

end</string>
	<key>fallbackInput</key>
	<string>none</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^@w</string>
	<key>name</key>
	<string>Paste Reference List (Markdown)</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.html.markdown.multimarkdown, text.html.markdown</string>
	<key>tabTrigger</key>
	<string>refs</string>
	<key>uuid</key>
	<string>CA4A6B09-DF43-46E3-A6B9-28C163178DBD</string>
</dict>
</plist>
